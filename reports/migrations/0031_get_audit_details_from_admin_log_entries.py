# Generated by Django 4.1.2 on 2022-10-07 09:53

from django.contrib.admin.models import ADDITION, CHANGE
from django.db import migrations
from django.db.models import F


def copy_audit_data_from_log_entries_to_reports(apps, schema_editor):
    LogEntry = apps.get_model("admin", "LogEntry")
    Report = apps.get_model("reports", "Report")

    for report in Report.objects.all():
        log = (
            LogEntry.objects.filter(
                content_type__app_label="reports",
                content_type__model="report",
                action_flag=ADDITION,
                object_id=report.pk,
            )
            .order_by("action_time")
            .first()
        )

        if log is None:
            continue

        report.created_at = log.action_time
        report.created_by = log.user
        report.save()

    for report in Report.objects.all():
        log = (
            LogEntry.objects.filter(
                content_type__app_label="reports",
                content_type__model="report",
                action_flag=CHANGE,
                object_id=report.pk,
            )
            .order_by("-action_time")
            .first()
        )

        if log is None:
            continue

        report.updated_at = log.action_time
        report.updated_by = log.user
        report.save()

    # set updated fields for those Reports which haven't been updated before
    Report.objects.filter(updated_at=None).update(
        updated_at=F("created_at"), updated_by=F("created_by")
    )


def remove_audit_data_from_reports(apps, schema_editor):
    Report = apps.get_model("reports", "Report")

    Report.objects.update(created_at=None, created_by=None, updated_by=None)


class Migration(migrations.Migration):

    dependencies = [
        ("reports", "0030_add_created_and_updated_fields"),
    ]

    operations = [
        migrations.RunPython(
            copy_audit_data_from_log_entries_to_reports,
            reverse_code=remove_audit_data_from_reports,
        )
    ]
